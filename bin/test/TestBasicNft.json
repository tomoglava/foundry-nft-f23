{
    "contractName": "TestBasicNft",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "log",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "log_address",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "val",
                    "type": "uint256[]"
                }
            ],
            "name": "log_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "int256[]",
                    "name": "val",
                    "type": "int256[]"
                }
            ],
            "name": "log_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "val",
                    "type": "address[]"
                }
            ],
            "name": "log_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "log_bytes",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "name": "log_bytes32",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "",
                    "type": "int256"
                }
            ],
            "name": "log_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "val",
                    "type": "address"
                }
            ],
            "name": "log_named_address",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256[]",
                    "name": "val",
                    "type": "uint256[]"
                }
            ],
            "name": "log_named_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256[]",
                    "name": "val",
                    "type": "int256[]"
                }
            ],
            "name": "log_named_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "val",
                    "type": "address[]"
                }
            ],
            "name": "log_named_array",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "val",
                    "type": "bytes"
                }
            ],
            "name": "log_named_bytes",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "val",
                    "type": "bytes32"
                }
            ],
            "name": "log_named_bytes32",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "val",
                    "type": "int256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                }
            ],
            "name": "log_named_decimal_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "val",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                }
            ],
            "name": "log_named_decimal_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "int256",
                    "name": "val",
                    "type": "int256"
                }
            ],
            "name": "log_named_int",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "val",
                    "type": "string"
                }
            ],
            "name": "log_named_string",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "key",
                    "type": "string"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "val",
                    "type": "uint256"
                }
            ],
            "name": "log_named_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "name": "log_string",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "log_uint",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bytes",
                    "name": "",
                    "type": "bytes"
                }
            ],
            "name": "logs",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "IS_TEST",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "USER",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "basicNft",
            "outputs": [
                {
                    "internalType": "contract BasicNFT",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "deployer",
            "outputs": [
                {
                    "internalType": "contract DeployBasicNft",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeArtifacts",
            "outputs": [
                {
                    "internalType": "string[]",
                    "name": "excludedArtifacts_",
                    "type": "string[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeContracts",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "excludedContracts_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeSelectors",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "name": "excludedSelectors_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "excludeSenders",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "excludedSenders_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "failed",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "setUp",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetArtifactSelectors",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "string",
                            "name": "artifact",
                            "type": "string"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
                    "name": "targetedArtifactSelectors_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetArtifacts",
            "outputs": [
                {
                    "internalType": "string[]",
                    "name": "targetedArtifacts_",
                    "type": "string[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetContracts",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "targetedContracts_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetInterfaces",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        },
                        {
                            "internalType": "string[]",
                            "name": "artifacts",
                            "type": "string[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzInterface[]",
                    "name": "targetedInterfaces_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetSelectors",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes4[]",
                            "name": "selectors",
                            "type": "bytes4[]"
                        }
                    ],
                    "internalType": "struct StdInvariant.FuzzSelector[]",
                    "name": "targetedSelectors_",
                    "type": "tuple[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "targetSenders",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "targetedSenders_",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "testCanMintAndHaveABalance",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "testNameIsCorrect",
            "outputs": [],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "uri",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basicNft\",\"outputs\":[{\"internalType\":\"contract BasicNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployer\",\"outputs\":[{\"internalType\":\"contract DeployBasicNft\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCanMintAndHaveABalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testNameIsCorrect\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/tomo/Documents/foundry-nft-f23/test/TestBasicNft.t.sol\":\"TestBasicNft\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x7dd11ac4db798fa196e00a0cfa288ce984acac881f1f34de03fe3187deed58de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c15fb03d5545e2d8d3948661596410edec5ec278a73988914b14a05d0d54557\",\"dweb:/ipfs/QmWGjkLgp4wSrTrFxF8cmhghaXQp5VyXYQvWE1DUTPL4rG\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x28473c688050ed5cfdf6a47bfd59cdc7209e6a3eab8b438eb92055ea4066a49b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d7e6391ced7256389f496fa35962d4ecdd6a066c5a54bdbef58abe6287c732b\",\"dweb:/ipfs/QmTuTqyapx9XraMX3mUjNjs3YHzBiQSfAQ38can96WWohM\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0xbc0132abe1c2accc2867c0f03667afffdf92f3e95a581bb03c9557eaa38ea500\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb6fab37dc73c219cfbb7b4f4998bcf7677ca5397a867e850f40232192073974\",\"dweb:/ipfs/QmUHsbVdp9SKmgek7ZfPcLTKrpZFXpqaqt4sVejzxGEQL3\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb91ab24383a5872b894fc93325eef1add6cbbf981628f18e860068bf88bb7dcc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2651e33b9ac8fc5803ed0a43078c1bf4fa90a0b0347aafd95776b02daccdcc57\",\"dweb:/ipfs/QmbdRyPuGJdZgnCuMnp7c1WsBo1Spf7j1KMmws1Z5rd4BQ\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0x58a72c765ed3f7ff6b105509689658795b8a3739b8931772a497155878381861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4a3746f4fabaeb980bd77d9e091d3904ee38a6c0e191bfa8ba6874c6f8558a3\",\"dweb:/ipfs/QmUfFDMEn461FgGEXt5HicyGD54sc28sLaQ9JRWDMBKed8\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xd7a115278b44e47816b2a9a5cea14b3c3f574182e289b29f98d5e2d0911ccae6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://18c07088a04c9669c5eb6f2050bb944daba75603a97c1a03752d594f587cf1a4\",\"dweb:/ipfs/QmbzjH83hquj5uodqahA5YRW972PDnhtVu6cEu9YjAfVHH\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbef9786cb49d3eade757bad87568c49c8c8f35721f0193c95ffb055d9e466e11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bafd2b0b2d28068d329f95ea8a1fbce3719c257fcb863fc01abcbafd8d531ab\",\"dweb:/ipfs/QmUeaFjKWTVDBsHVfSob4mwt6A5hTnKDz22HaUXeZhypa3\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"/home/tomo/Documents/foundry-nft-f23/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"/home/tomo/Documents/foundry-nft-f23/script/DeployBasicNft.s.sol\":{\"keccak256\":\"0xcd1f885f74c70f1c95be172f014364e29632a44e3dcc390c97ecfd273ba7c55e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70b4c9ac9ef2651011bda9e6ff4beb970e669f45951f07319e9abdb9faa39330\",\"dweb:/ipfs/QmcZmz5w9woy2GbakAzHCHTijhZ6ozhkzrpJknsGy3pJ9q\"]},\"/home/tomo/Documents/foundry-nft-f23/src/BasicNFT.sol\":{\"keccak256\":\"0x644af8e80f3174be36a546fa7dbe6719066bca7a5ff14368165c65f4f36ca709\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://231dd41783c08bc7a5e9e35b77f92aa03e2adb13ef9dbc8d3533658ec14bbea7\",\"dweb:/ipfs/QmXccAf6onWqqxAGCtR6uJizPyoTmNduby9BeydR6uZgzb\"]},\"/home/tomo/Documents/foundry-nft-f23/test/TestBasicNft.t.sol\":{\"keccak256\":\"0x468d641b936d0ec333d99ec06fca748359986d924061d170e0f3fb7640ffcf1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd7570b8bc10cc49151e57b868d8d08ec41e55bb35e2c72d407fc141049311b2\",\"dweb:/ipfs/Qmbb8Snwcrj99GQwvwRwjWZk86k6RX9HVCZbvRB6My36vU\"]}},\"version\":1}",
    "bytecode": "",
    "deployedBytecode": "6080806040526004361015610012575f80fd5b5f905f3560e01c90816232f8d114610c92575080630a9254e414610b845780631ed7831c14610b075780632ade38801461094d5780633e5e3c23146108d05780633f7286f414610853578063451f3246146105f857806366d9a9a0146104d757806381e167cf146104ae57806385226c8114610424578063916a17c61461037c578063b0464fdc146102d4578063b5508aa91461024a578063ba414fa614610225578063c37aa674146101fe578063d5f39488146101d1578063e20c9f7114610147578063eac989f8146101135763fa7626d4146100ee575f80fd5b34610110578060031936011261011057602060ff601f54166040519015158152f35b80fd5b503461011057806003193601126101105761014361012f610f23565b604051918291602083526020830190610dae565b0390f35b503461011057806003193601126101105760405180916020601554928381520191601582527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475915b8181106101b257610143856101a681870382610f01565b60405191829182610d6c565b82546001600160a01b031684526020909301926001928301920161018f565b5034610110578060031936011261011057601f5460405160089190911c6001600160a01b03168152602090f35b5034610110578060031936011261011057602080546040516001600160a01b039091168152f35b5034610110578060031936011261011057602061024061131e565b6040519015158152f35b503461011057806003193601126101105760195461026781611038565b916102756040519384610f01565b818352601981527f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c9695602084015b8383106102b757604051806101438782610e0f565b6001602081926102c685611050565b8152019201920191906102a2565b5034610110578060031936011261011057601c546102f181611038565b916102ff6040519384610f01565b818352601c81527f0e4562a10381dec21b205ed72637e6b1b523bdd0e4d4d50af5cd23dd4500a211602084015b83831061034157604051806101438782610e6e565b6002602060019260405161035481610ee5565b848060a01b03865416815261036a85870161111c565b8382015281520192019201919061032c565b5034610110578060031936011261011057601d5461039981611038565b916103a76040519384610f01565b818352601d81527f6d4407e7be21f808e6509aa9fa9143369579dd7d760fe20a2c09680fc146134f602084015b8383106103e957604051806101438782610e6e565b600260206001926040516103fc81610ee5565b848060a01b03865416815261041285870161111c565b838201528152019201920191906103d4565b5034610110578060031936011261011057601a5461044181611038565b9161044f6040519384610f01565b818352601a81527f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e602084015b83831061049157604051806101438782610e0f565b6001602081926104a085611050565b81520192019201919061047c565b50346101105780600319360112610110576021546040516001600160a01b039091168152602090f35b5034610110578060031936011261011057601b546104f481611038565b6105016040519182610f01565b818152601b83526020810191837f3ad8aa4f87544323a9d1e5dd902f40c356527a7955687113db5f9a85ad579dc1845b8383106105bd57868587604051928392602084019060208552518091526040840160408260051b8601019392905b82821061056e57505050500390f35b919360019193955060206105ad8192603f198a82030186528851908361059d8351604084526040840190610dae565b9201519084818403910152610dd2565b960192019201859493919261055f565b600260206001926040516105d081610ee5565b6105d986611050565b81526105e685870161111c565b83820152815201920192019190610531565b503461084f575f36600319011261084f576021546001600160a01b0316737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561084f576040519063ca669fa760e01b825260048201525f8160248183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af1801561084457610831575b5060205481906001600160a01b0316610682610f23565b90803b1561082d5760405163da86f4a960e01b81526020600482015291839183918290849082906106b7906024830190610dae565b03925af180156107d357610818575b5050602080546021546040516370a0823160e01b81526001600160a01b0391821660048201529284929091169083602481845afa9283156107d35782936107de575b5061071760016024941461101d565b6040519283809263c87b56dd60e01b82528460048301525afa80156107d3576107ae9183916107b1575b5060405161076e6020828180820195805191829101875e810187838201520301601f198101835282610f01565b519020610779610f23565b6040516107a56020828180820195805191829101875e810188838201520301601f198101835282610f01565b5190201461101d565b80f35b6107cd91503d8085833e6107c58183610f01565b810190610faa565b5f610741565b6040513d84823e3d90fd5b92506020833d602011610810575b816107f960209383610f01565b8101031261080c57915191610717610708565b5080fd5b3d91506107ec565b8161082291610f01565b61011057805f6106c6565b5050fd5b61083d91505f90610f01565b5f5f61066b565b6040513d5f823e3d90fd5b5f80fd5b3461084f575f36600319011261084f5760405180602060175491828152019060175f527fc624b66cc0138b8fabc209247f72d758e1cf3343756d543badbf24212bed8c15905f5b8181106108b157610143856101a681870382610f01565b82546001600160a01b031684526020909301926001928301920161089a565b3461084f575f36600319011261084f5760405180602060185491828152019060185f527fb13d2d76d1f4b7be834882e410b3e3a8afaf69f83600ae24db354391d2378d2e905f5b81811061092e57610143856101a681870382610f01565b82546001600160a01b0316845260209093019260019283019201610917565b3461084f575f36600319011261084f57601e5461096981611038565b906109776040519283610f01565b808252602082019081601e5f527f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e3505f915b838310610a7c57848660405191829160208301906020845251809152604083019060408160051b85010192915f905b8282106109e657505050500390f35b919390929450603f198682030182528451906020604082019260018060a01b0381511683520151916040602083015282518091526060820190602060608260051b8501019401925f5b828110610a5157505050505060208060019296019201920185949391926109d7565b9091929394602080610a6f600193605f198782030189528951610dae565b9701950193929101610a2f565b604051610a8881610ee5565b82546001600160a01b03168152600183018054610aa481611038565b91610ab26040519384610f01565b81835260208301905f5260205f20905f905b838210610aea5750505050600192826020928360029501528152019201920191906109a8565b600160208192610af986611050565b815201930191019091610ac4565b3461084f575f36600319011261084f5760405180602060165491828152019060165f527fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b5124289905f5b818110610b6557610143856101a681870382610f01565b82546001600160a01b0316845260209093019260019283019201610b4e565b3461084f575f36600319011261084f5760405161140b80820182811067ffffffffffffffff821117610c7e5782916113c8833903905ff0801561084457601f8054610100600160a81b031916600892831b610100600160a81b03161790819055604051636020311360e11b815291602091839160049183915f91901c6001600160a01b03165af1908115610844575f91610c3c575b50602080546001600160a01b0319166001600160a01b0392909216919091179055005b90506020813d602011610c76575b81610c5760209383610f01565b8101031261084f57516001600160a01b038116810361084f5781610c19565b3d9150610c4a565b634e487b7160e01b5f52604160045260245ffd5b3461084f575f36600319011261084f576020546306fdde0360e01b82525f90829060049082906001600160a01b03165afa801561084457610d50915f91610d52575b50604051610ce3604082610f01565b60058152602081019164446f67696560d81b8352604051610d236020828180820195805191829101875e81015f838201520301601f198101835282610f01565b519020916107a56020604051809382820195518091875e81015f838201520301601f198101835282610f01565b005b610d6691503d805f833e6107c58183610f01565b82610cd4565b60206040818301928281528451809452019201905f5b818110610d8f5750505090565b82516001600160a01b0316845260209384019390920191600101610d82565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90602080835192838152019201905f5b818110610def5750505090565b82516001600160e01b031916845260209384019390920191600101610de2565b602081016020825282518091526040820191602060408360051b8301019401925f915b838310610e4157505050505090565b9091929394602080610e5f600193603f198682030187528951610dae565b97019301930191939290610e32565b602081016020825282518091526040820191602060408360051b8301019401925f915b838310610ea057505050505090565b9091929394602080610ed6600193603f198682030187526040838b51878060a01b03815116845201519181858201520190610dd2565b97019301930191939290610e91565b6040810190811067ffffffffffffffff821117610c7e57604052565b90601f8019910116810190811067ffffffffffffffff821117610c7e57604052565b60405190610f32608083610f01565b605782527f67342f3f66696c656e616d653d302d5055472e6a736f6e0000000000000000006060837f697066733a2f2f62616679626569673337696f6972373673376d67356f6f626560208201527f746e636f6a636d3363336878617379643472766964346a71687934676b61686560408201520152565b60208183031261084f5780519067ffffffffffffffff821161084f570181601f8201121561084f5780519067ffffffffffffffff8211610c7e5760405192610ffc601f8401601f191660200185610f01565b8284526020838301011161084f57815f9260208093018386015e8301015290565b1561102457565b634e487b7160e01b5f52600160045260245ffd5b67ffffffffffffffff8111610c7e5760051b60200190565b90604051915f8154908160011c9260018316928315611112575b6020851084146110fe5784875286939081156110dc5750600114611098575b5061109692500383610f01565b565b90505f9291925260205f20905f915b8183106110c0575050906020611096928201015f611089565b60209193508060019154838589010152019101909184926110a7565b90506020925061109694915060ff191682840152151560051b8201015f611089565b634e487b7160e01b5f52602260045260245ffd5b93607f169361106a565b90604051918281549182825260208201905f5260205f20925f905b8060078301106112795761109694549181811061125a575b81811061123b575b81811061121c575b8181106111fd575b8181106111de575b8181106111bf575b8181106111a2575b1061118d575b500383610f01565b6001600160e01b03191681526020015f611185565b602083811b6001600160e01b03191685529093019260010161117f565b604083901b6001600160e01b0319168452602090930192600101611177565b606083901b6001600160e01b031916845260209093019260010161116f565b608083901b6001600160e01b0319168452602090930192600101611167565b60a083901b6001600160e01b031916845260209093019260010161115f565b60c083901b6001600160e01b0319168452602090930192600101611157565b60e083901b6001600160e01b031916845260209093019260010161114f565b916008919350610100600191865463ffffffff60e01b8160e01b16825263ffffffff60e01b8160c01b16602083015263ffffffff60e01b8160a01b16604083015263ffffffff60e01b8160801b16606083015263ffffffff60e01b8160601b16608083015263ffffffff60e01b8160401b1660a083015263ffffffff60e01b8160201b1660c083015263ffffffff60e01b1660e0820152019401920185929391611137565b60085460ff16801561132d5790565b50604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d60048201526519985a5b195960d21b6024820152602081604481737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa908115610844575f91611395575b50151590565b90506020813d6020116113bf575b816113b060209383610f01565b8101031261084f57515f61138f565b3d91506113a356fe608080604052346026576201000162ff00ff19600c541617600c556113e0908161002b8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c908163c04062261461005c575063f8ccbf4714610034575f80fd5b34610059578060031936011261005957602060ff600c5460101c166040519015158152f35b80fd5b9050346101b2575f3660031901126101b257737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156101b257637fb5297f60e01b81525f8160048183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af180156101a757610194575b506040516111be8082019082821067ffffffffffffffff831117610180579082916101ed8339039082f0801561017357737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561016457604051633b756e9b60e11b8152828160048183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af180156101685761014f575b6040516001600160a01b0383168152602090f35b61015a8380926101b6565b610164578161013b565b5080fd5b6040513d85823e3d90fd5b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b6101a091505f906101b6565b5f5f6100bb565b6040513d5f823e3d90fd5b5f80fd5b90601f8019910116810190811067ffffffffffffffff8211176101d857604052565b634e487b7160e01b5f52604160045260245ffdfe60806040523461030d57604080519081016001600160401b038111828210176102235760409081526005825264446f67696560d81b602083015280519081016001600160401b03811182821017610223576040526003815262444f4760e81b602082015281516001600160401b038111610223575f54600181811c91168015610303575b602082101461020557601f81116102a1575b50602092601f821160011461024257928192935f92610237575b50508160011b915f199060031b1c1916175f555b80516001600160401b03811161022357600154600181811c91168015610219575b602082101461020557601f81116101a2575b50602091601f8211600114610142579181925f92610137575b50508160011b915f199060031b1c1916176001555b5f600655604051610eac90816103128239f35b015190505f8061010f565b601f1982169260015f52805f20915f5b85811061018a57508360019510610172575b505050811b01600155610124565b01515f1960f88460031b161c191690555f8080610164565b91926020600181928685015181550194019201610152565b60015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c810191602084106101fb575b601f0160051c01905b8181106101f057506100f6565b5f81556001016101e3565b90915081906101da565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100e4565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100af565b601f198216935f8052805f20915f5b8681106102895750836001959610610271575b505050811b015f556100c3565b01515f1960f88460031b161c191690555f8080610264565b91926020600181928685015181550194019201610251565b5f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c810191602084106102f9575b601f0160051c01905b8181106102ee5750610095565b5f81556001016102e1565b90915081906102d8565b90607f1690610083565b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146109de5750806306fdde031461093c578063081812fc14610900578063095ea7b31461081657806323b872dd146107ff57806342842e0e146107d05780636352211e146107a057806370a082311461074f57806395d89b4114610685578063a22cb465146105ea578063b88d4fde1461057c578063c87b56dd146104a4578063da86f4a9146101115763e985e9c5146100b6575f80fd5b3461010d57604036600319011261010d576100cf610a6d565b6100d7610a83565b9060018060a01b03165f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b5f80fd5b3461010d57602036600319011261010d5760043567ffffffffffffffff811161010d573660238201121561010d57610153903690602481600401359101610b11565b6006545f52600760205260405f20815167ffffffffffffffff81116104905761017c8254610b47565b601f811161044b575b50602092601f82116001146103ec57928192935f926103e1575b50508160011b915f199060031b1c19161790555b6006546040516020916101c68383610ad3565b5f825233156103ce575f8181526002845260409020546001600160a01b0316801515908161039d575b335f8181526003875260408082208054600101905585825260028852812080546001600160a01b0319168317905584919083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a45061038a57333b61027c575b5050506006545f19811461026857600101600655005b634e487b7160e01b5f52601160045260245ffd5b6102b69183916040519384928392630a85bd0160e11b84523360048501525f60248501526044840152608060648401526084830190610a49565b03815f335af15f918161034a575b5061031657503d1561030f573d6102da81610af5565b906102e86040519283610ad3565b81523d5f8383013e5b8051918261030c57633250574960e11b5f523360045260245ffd5b01fd5b60606102f1565b6001600160e01b03191663757a42ff60e11b01905061033757808080610252565b633250574960e11b5f523360045260245ffd5b9091508281813d8311610383575b6103628183610ad3565b8101031261010d57516001600160e01b03198116810361010d5790836102c4565b503d610358565b6339e3563760e11b5f525f60045260245ffd5b5f8381526004602052604080822080546001600160a01b031916905582825260038752902080545f190190556101ef565b633250574960e11b5f525f60045260245ffd5b01519050838061019f565b601f19821693835f52805f20915f5b868110610433575083600195961061041b575b505050811b0190556101b3565b01515f1960f88460031b161c1916905583808061040e565b919260206001819286850151815501940192016103fb565b825f5260205f20601f830160051c81019160208410610486575b601f0160051c01905b81811061047b5750610185565b5f815560010161046e565b9091508190610465565b634e487b7160e01b5f52604160045260245ffd5b3461010d57602036600319011261010d576004355f52600760205260405f20604051905f908054906104d582610b47565b80855291600181169081156105555750600114610515575b610511846104fd81860382610ad3565b604051918291602083526020830190610a49565b0390f35b5f90815260208120939250905b80821061053b575090915081016020016104fd826104ed565b919260018160209254838588010152019101909291610522565b60ff191660208087019190915292151560051b850190920192506104fd91508390506104ed565b3461010d57608036600319011261010d57610595610a6d565b61059d610a83565b906044356064359267ffffffffffffffff841161010d573660238501121561010d576105d66105e8943690602481600401359101610b11565b926105e2838383610b7f565b33610d40565b005b3461010d57604036600319011261010d57610603610a6d565b6024359081151580920361010d576001600160a01b031690811561067257335f52600560205260405f20825f5260205260405f2060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b50630b61174360e31b5f5260045260245ffd5b3461010d575f36600319011261010d576040515f6001546106a581610b47565b808452906001811690811561072b57506001146106cd575b610511836104fd81850382610ad3565b91905060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f905b808210610711575090915081016020016104fd6106bd565b9192600181602092548385880101520191019092916106f9565b60ff191660208086019190915291151560051b840190910191506104fd90506106bd565b3461010d57602036600319011261010d576001600160a01b03610770610a6d565b16801561078d575f526003602052602060405f2054604051908152f35b6322718ad960e21b5f525f60045260245ffd5b3461010d57602036600319011261010d5760206107be600435610d0c565b6040516001600160a01b039091168152f35b3461010d576105e86107e136610a99565b90604051926107f1602085610ad3565b5f84526105e2838383610b7f565b3461010d576105e861081036610a99565b91610b7f565b3461010d57604036600319011261010d5761082f610a6d565b60243561083b81610d0c565b331515806108ed575b806108c0575b6108ad5781906001600160a01b0384811691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f90815260046020526040902080546001600160a01b0319166001600160a01b03909216919091179055005b63a9fbf51f60e01b5f523360045260245ffd5b506001600160a01b0381165f90815260056020908152604080832033845290915290205460ff161561084a565b506001600160a01b038116331415610844565b3461010d57602036600319011261010d5760043561091d81610d0c565b505f526004602052602060018060a01b0360405f205416604051908152f35b3461010d575f36600319011261010d576040515f5f5461095b81610b47565b808452906001811690811561072b575060011461098257610511836104fd81850382610ad3565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b8082106109c4575090915081016020016104fd6106bd565b9192600181602092548385880101520191019092916109ac565b3461010d57602036600319011261010d576004359063ffffffff60e01b821680920361010d576020916380ac58cd60e01b8114908115610a38575b8115610a27575b5015158152f35b6301ffc9a760e01b14905083610a20565b635b5e139f60e01b81149150610a19565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361010d57565b602435906001600160a01b038216820361010d57565b606090600319011261010d576004356001600160a01b038116810361010d57906024356001600160a01b038116810361010d579060443590565b90601f8019910116810190811067ffffffffffffffff82111761049057604052565b67ffffffffffffffff811161049057601f01601f191660200190565b929192610b1d82610af5565b91610b2b6040519384610ad3565b82948184528183011161010d578281602093845f960137010152565b90600182811c92168015610b75575b6020831014610b6157565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610b56565b6001600160a01b03909116919082156103ce575f828152600260205260409020546001600160a01b031692829033151580610c77575b5084610c44575b805f52600360205260405f2060018154019055815f52600260205260405f20816bffffffffffffffffffffffff60a01b825416179055847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a46001600160a01b0316808303610c2c57505050565b6364283d7b60e01b5f5260045260245260445260645ffd5b5f82815260046020526040902080546001600160a01b0319169055845f52600360205260405f205f198154019055610bbc565b90915080610cbb575b15610c8d5782905f610bb5565b8284610ca557637e27328960e01b5f5260045260245ffd5b63177e802f60e01b5f523360045260245260445ffd5b503384148015610cea575b80610c8057505f838152600460205260409020546001600160a01b03163314610c80565b505f84815260056020908152604080832033845290915290205460ff16610cc6565b5f818152600260205260409020546001600160a01b0316908115610d2e575090565b637e27328960e01b5f5260045260245ffd5b823b610d4e575b5050505050565b604051630a85bd0160e11b81526001600160a01b039182166004820152918116602483015260448201939093526080606482015291169160209082908190610d9a906084830190610a49565b03815f865af15f9181610e31575b50610dfd57503d15610df6573d610dbe81610af5565b90610dcc6040519283610ad3565b81523d5f602083013e5b80519081610df15782633250574960e11b5f5260045260245ffd5b602001fd5b6060610dd6565b6001600160e01b03191663757a42ff60e11b01610e1f57505f80808080610d47565b633250574960e11b5f5260045260245ffd5b9091506020813d602011610e6e575b81610e4d60209383610ad3565b8101031261010d57516001600160e01b03198116810361010d57905f610da8565b3d9150610e4056fea2646970667358221220bc450ce39dc0b8957de307ce310feeeb9ee43713027b344f1dbe6ce5e9359e0464736f6c634300081c0033a264697066735822122086c803c4a982a6f3a8697b61a7240f6cd104ff056319536bd7fb97ad75b4cde464736f6c634300081c0033a264697066735822122003961de04914b7aa4c8a3d90cb44dfc42ccf29c99e7c36025693ec9425e341f664736f6c634300081c0033",
    "sourceMap": "254:959:40:-:0;;;;;;;3166:4:3;254:959:40;;3166:4:3;254:959:40;;;3166:4:3;254:959:40;3166:4:3;254:959:40;;1038:4:13;254:959:40;;;1038:4:13;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;254:959:40;;;;;20318:22:4;;254:959:40;;;;;;;;;;;20318:22:4;;;;;;:::i;:::-;254:959:40;20308:33:4;;254:959:40;;291:59:4;;;;20359:19;;254:959:40;20359:19:4;;291:59;254:959:40;20359:19:4;20318:22;20359:19;254:959:40;20359:19:4;;;;;;;254:959:40;20359:19:4;;;-1:-1:-1;20388:20:4;254:959:40;20388:20:4;;;;254:959:40;;291:59:4;254:959:40;;291:59:4;;;;;;;20388:20;;254:959:40;;;;;;20388:20:4;;254:959:40;20388:20:4;;291:59;254:959:40;20318:22:4;291:59;;;254:959:40;291:59:4;;;;;;;;;;254:959:40;;;;;;;;;1038:4:13;254:959:40;-1:-1:-1;;254:959:40;291:59:4;;20388:20;;;254:959:40;;20388:20:4;;;;;;;;-1:-1:-1;;378:16:40;254:959;;-1:-1:-1;;;;;;254:959:40;;;;;;;;;;;;;;;;20388:20:4;254:959:40;20388:20:4;;;:::i;:::-;254:959:40;20388:20:4;;;254:959:40;;291:59:4;254:959:40;291:59:4;;;;;20388:20;254:959:40;;;20359:19:4;;;254:959:40;20359:19:4;;254:959:40;20359:19:4;;;;;;254:959:40;20359:19:4;;;:::i;:::-;;;291:59;;;;;-1:-1:-1;;;;;254:959:40;;291:59:4;;;;20359:19;;;;;;-1:-1:-1;20359:19:4;;254:959:40;;;;;;;;;;;;;;;;;-1:-1:-1;;254:959:40;;;;-1:-1:-1;;;;;254:959:40;;;;;;;;;;:::o",
    "deployedSourceMap": "254:959:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;326:24;254:959;326:24;;;254:959;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1016:26:13;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2723:18:6;254:959:40;;;;;;;2723:18:6;254:959:40;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;290:30;254:959;;;;;;;;-1:-1:-1;;;;;254:959:40;;;;;;;;;;;;;;;;;;;326:24;254:959;;;;-1:-1:-1;;;;;254:959:40;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2575:18:6;254:959:40;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2575:18:6;254:959:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2876:18:6;254:959:40;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2876:18:6;254:959:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3653:18:6;254:959:40;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3653:18:6;254:959:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3162:18:6;254:959:40;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;3162:18:6;254:959:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;356:38;254:959;;;-1:-1:-1;;;;;254:959:40;;;;;;;;;;;;;;;;;;;;;3346:26:6;254:959:40;;;;:::i;:::-;;;;;;;:::i;:::-;;;;3346:26:6;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:959:40;;;;1017:4;254:959;-1:-1:-1;;;;;254:959:40;;1008:14;;;;254:959;;;;;;1008:14;;254:959;1008:14;;254:959;;1008:14;;;;254:959;1008:14;;;;;;;;254:959;-1:-1:-1;254:959:40;;;;-1:-1:-1;;;;;254:959:40;;;:::i;:::-;1032:21;;;;;;254:959;;-1:-1:-1;;;1032:21:40;;254:959;;1032:21;;254:959;;;;;;;;;;;;;;1008:14;254:959;;;;:::i;:::-;1032:21;;;;;;;;;;254:959;-1:-1:-1;;254:959:40;;;1017:4;254:959;;;-1:-1:-1;;;1071:24:40;;-1:-1:-1;;;;;254:959:40;;;;1071:24;;254:959;;;;;;;;;1008:14;254:959;;1071:24;;;;;;;;;;;254:959;1071:29;1064:37;1099:1;1008:14;1071:29;;1064:37;:::i;:::-;254:959;;;;;;;;;1145:20;;;254:959;1145:20;;1590:14:0;1145:20:40;;;;;;1111:93;1145:20;;;;;254:959;;;;1128:38;254:959;1128:38;;;;;254:959;;;;;;;;;;;;;;;;1128:38;;254:959;;1128:38;;;;;;:::i;:::-;254:959;1118:49;;254:959;;:::i;:::-;;;1181:21;254:959;1181:21;;;;;254:959;;;;;;;;;;;;;;;;1181:21;;254:959;;1181:21;;;;;;:::i;:::-;254:959;1171:32;;1118:85;1111:93;:::i;:::-;254:959;;1145:20;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;254:959;;;;;;;;;1071:24;;;254:959;1071:24;;254:959;1071:24;;;;;;254:959;1071:24;;;:::i;:::-;;;1590:14:0;;;;;;;1064:37:40;1071:24;;1590:14:0;254:959:40;;;1071:24;;;-1:-1:-1;1071:24:40;;1032:21;;;;;:::i;:::-;254:959;;1032:21;;;;;254:959;;;1008:14;;;;254:959;1008:14;;:::i;:::-;254:959;1008:14;;;;254:959;;;;;;;;;1008:14;254:959;;;;;;;;;-1:-1:-1;;254:959:40;;;;;;;;3501:18:6;254:959:40;;;;;;;3501:18:6;254:959:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;254:959:40;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:959:40;;;;;;;;3794:16:6;254:959:40;;;;;;;3794:16:6;254:959:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;254:959:40;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:959:40;;;;3948:19:6;254:959:40;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;3948:19:6;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;254:959:40;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:959:40;;;;;;;;3018:16:6;254:959:40;;;;;;;3018:16:6;254:959:40;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;254:959:40;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:959:40;;;;;;578:20;;;;;;;;;;;;;;;;;;;;254:959;578:20;;;;;567:31;254:959;;-1:-1:-1;;;;;;254:959:40;;;;;-1:-1:-1;;;;;254:959:40;;;;;;;;-1:-1:-1;;;619:14:40;;254:959;619:14;;254:959;;;;;;;;;;-1:-1:-1;;;;;254:959:40;619:14;;;;;;;254:959;619:14;;;254:959;-1:-1:-1;619:14:40;254:959;;-1:-1:-1;;;;;;254:959:40;-1:-1:-1;;;;;254:959:40;;;;;;;;;;;619:14;;;;;;;;;;;;;;;;;:::i;:::-;;;254:959;;;;;-1:-1:-1;;;;;254:959:40;;;;;;619:14;;;;;;-1:-1:-1;619:14:40;;578:20;254:959;;;;;;;;;;;;;;;;;-1:-1:-1;;254:959:40;;;;718:8;254:959;-1:-1:-1;;;718:15:40;;254:959;;;;;;;;-1:-1:-1;;;;;254:959:40;718:15;;;;;;822:82;718:15;254:959;718:15;;;254:959;;;;;;;;:::i;:::-;;;;718:8;254:959;;;-1:-1:-1;;;254:959:40;;;;839:22;718:8;839:22;;;;;254:959;;;;;;;;;;;;;;;;839:22;;254:959;;839:22;;;;;;:::i;:::-;254:959;829:33;;254:959;876:26;718:8;254:959;;876:26;;;;;254:959;;;;;;;;;;;;;876:26;;254:959;;876:26;;;;;;:::i;822:82::-;254:959;718:15;;;;;;254:959;718:15;;;;;;:::i;:::-;;;;254:959;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;254:959:40;;;;;;;;-1:-1:-1;;254:959:40;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;254:959:40;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;254:959:40;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;254:959:40;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;254:959:40;;;;;-1:-1:-1;254:959:40;;-1:-1:-1;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;254:959:40;;;;;-1:-1:-1;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;254:959:40;;-1:-1:-1;254:959:40;;-1:-1:-1;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;254:959:40;;;;;;;;;;;;;-1:-1:-1;;;;;;254:959:40;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;254:959:40;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;254:959:40;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;254:959:40;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;254:959:40;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;254:959:40;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;254:959:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:204:2;1302:7;254:959:40;;;;;;;1325:14:2;:::o;1298:143::-;254:959:40;;;;;;1377:39:2;;254:959:40;1377:39:2;;;254:959:40;192:59:2;;;;;;1590:14:0;192:59:2;1377:39;;;254:959:40;1377:39:2;;;;;;;254:959:40;1377:39:2;;;1298:143;1377:53;;;1370:60;:::o;1377:39::-;;;192:59;1377:39;;192:59;1377:39;;;;;;192:59;1377:39;;;:::i;:::-;;;192:59;;;;;1377:39;;;;;;-1:-1:-1;1377:39:2;",
    "sourcePath": "/home/tomo/Documents/foundry-nft-f23/test/TestBasicNft.t.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.28+commit.7893614a"
    },
    "ast": {
        "absolutePath": "/home/tomo/Documents/foundry-nft-f23/test/TestBasicNft.t.sol",
        "exportedSymbols": {
            "BasicNFT": [
                46719
            ],
            "DeployBasicNft": [
                46660
            ],
            "Test": [
                12868
            ],
            "TestBasicNft": [
                46835
            ]
        },
        "id": 46836,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 46721,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".28"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:24:40"
            },
            {
                "absolutePath": "/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/Test.sol",
                "file": "/home/tomo/Documents/foundry-nft-f23/lib/forge-std/src/Test.sol",
                "id": 46723,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 46836,
                "sourceUnit": 12869,
                "src": "58:85:40",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 46722,
                            "name": "Test",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12868,
                            "src": "66:4:40",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/tomo/Documents/foundry-nft-f23/src/BasicNFT.sol",
                "file": "../src/BasicNFT.sol",
                "id": 46725,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 46836,
                "sourceUnit": 46720,
                "src": "144:45:40",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 46724,
                            "name": "BasicNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46719,
                            "src": "152:8:40",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "/home/tomo/Documents/foundry-nft-f23/script/DeployBasicNft.s.sol",
                "file": "../script/DeployBasicNft.s.sol",
                "id": 46727,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 46836,
                "sourceUnit": 46661,
                "src": "190:62:40",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 46726,
                            "name": "DeployBasicNft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46660,
                            "src": "198:14:40",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 46728,
                            "name": "Test",
                            "nameLocations": [
                                "279:4:40"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 12868,
                            "src": "279:4:40"
                        },
                        "id": 46729,
                        "nodeType": "InheritanceSpecifier",
                        "src": "279:4:40"
                    }
                ],
                "canonicalName": "TestBasicNft",
                "contractDependencies": [
                    46660
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 46835,
                "linearizedBaseContracts": [
                    46835,
                    12868,
                    12816,
                    6794,
                    6434,
                    5639,
                    3579,
                    2734,
                    65,
                    62
                ],
                "name": "TestBasicNft",
                "nameLocation": "263:12:40",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "d5f39488",
                        "id": 46732,
                        "mutability": "mutable",
                        "name": "deployer",
                        "nameLocation": "312:8:40",
                        "nodeType": "VariableDeclaration",
                        "scope": 46835,
                        "src": "290:30:40",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DeployBasicNft_$46660",
                            "typeString": "contract DeployBasicNft"
                        },
                        "typeName": {
                            "id": 46731,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 46730,
                                "name": "DeployBasicNft",
                                "nameLocations": [
                                    "290:14:40"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 46660,
                                "src": "290:14:40"
                            },
                            "referencedDeclaration": 46660,
                            "src": "290:14:40",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DeployBasicNft_$46660",
                                "typeString": "contract DeployBasicNft"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "c37aa674",
                        "id": 46735,
                        "mutability": "mutable",
                        "name": "basicNft",
                        "nameLocation": "342:8:40",
                        "nodeType": "VariableDeclaration",
                        "scope": 46835,
                        "src": "326:24:40",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BasicNFT_$46719",
                            "typeString": "contract BasicNFT"
                        },
                        "typeName": {
                            "id": 46734,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 46733,
                                "name": "BasicNFT",
                                "nameLocations": [
                                    "326:8:40"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 46719,
                                "src": "326:8:40"
                            },
                            "referencedDeclaration": 46719,
                            "src": "326:8:40",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BasicNFT_$46719",
                                "typeString": "contract BasicNFT"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "81e167cf",
                        "id": 46740,
                        "mutability": "mutable",
                        "name": "USER",
                        "nameLocation": "371:4:40",
                        "nodeType": "VariableDeclaration",
                        "scope": 46835,
                        "src": "356:38:40",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 46736,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "356:7:40",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "value": {
                            "arguments": [
                                {
                                    "hexValue": "75736572",
                                    "id": 46738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "387:6:40",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_cb61ad33d3763aed2bc16c0f57ff251ac638d3d03ab7550adfd3e166c2e7adb6",
                                        "typeString": "literal_string \"user\""
                                    },
                                    "value": "user"
                                }
                            ],
                            "expression": {
                                "argumentTypes": [
                                    {
                                        "typeIdentifier": "t_stringliteral_cb61ad33d3763aed2bc16c0f57ff251ac638d3d03ab7550adfd3e166c2e7adb6",
                                        "typeString": "literal_string \"user\""
                                    }
                                ],
                                "id": 46737,
                                "name": "makeAddr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5401,
                                "src": "378:8:40",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                                    "typeString": "function (string memory) returns (address)"
                                }
                            },
                            "id": 46739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "378:16:40",
                            "tryCall": false,
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": true,
                        "functionSelector": "eac989f8",
                        "id": 46743,
                        "mutability": "constant",
                        "name": "uri",
                        "nameLocation": "423:3:40",
                        "nodeType": "VariableDeclaration",
                        "scope": 46835,
                        "src": "400:126:40",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 46741,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "400:6:40",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": {
                            "hexValue": "697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6e",
                            "id": 46742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "437:89:40",
                            "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f5eed4f63f16dc8435ed5e031f22f9553384324656005540ac9ece13d0969af8",
                                "typeString": "literal_string \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\""
                            },
                            "value": "ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json"
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 46759,
                            "nodeType": "Block",
                            "src": "557:83:40",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 46751,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 46746,
                                            "name": "deployer",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46732,
                                            "src": "567:8:40",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_DeployBasicNft_$46660",
                                                "typeString": "contract DeployBasicNft"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 46749,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "NewExpression",
                                                "src": "578:18:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DeployBasicNft_$46660_$",
                                                    "typeString": "function () returns (contract DeployBasicNft)"
                                                },
                                                "typeName": {
                                                    "id": 46748,
                                                    "nodeType": "UserDefinedTypeName",
                                                    "pathNode": {
                                                        "id": 46747,
                                                        "name": "DeployBasicNft",
                                                        "nameLocations": [
                                                            "582:14:40"
                                                        ],
                                                        "nodeType": "IdentifierPath",
                                                        "referencedDeclaration": 46660,
                                                        "src": "582:14:40"
                                                    },
                                                    "referencedDeclaration": 46660,
                                                    "src": "582:14:40",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_DeployBasicNft_$46660",
                                                        "typeString": "contract DeployBasicNft"
                                                    }
                                                }
                                            },
                                            "id": 46750,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "578:20:40",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_DeployBasicNft_$46660",
                                                "typeString": "contract DeployBasicNft"
                                            }
                                        },
                                        "src": "567:31:40",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_DeployBasicNft_$46660",
                                            "typeString": "contract DeployBasicNft"
                                        }
                                    },
                                    "id": 46752,
                                    "nodeType": "ExpressionStatement",
                                    "src": "567:31:40"
                                },
                                {
                                    "expression": {
                                        "id": 46757,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 46753,
                                            "name": "basicNft",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 46735,
                                            "src": "608:8:40",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_BasicNFT_$46719",
                                                "typeString": "contract BasicNFT"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "expression": {
                                                    "id": 46754,
                                                    "name": "deployer",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 46732,
                                                    "src": "619:8:40",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_DeployBasicNft_$46660",
                                                        "typeString": "contract DeployBasicNft"
                                                    }
                                                },
                                                "id": 46755,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "628:3:40",
                                                "memberName": "run",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 46659,
                                                "src": "619:12:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_BasicNFT_$46719_$",
                                                    "typeString": "function () external returns (contract BasicNFT)"
                                                }
                                            },
                                            "id": 46756,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "619:14:40",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_BasicNFT_$46719",
                                                "typeString": "contract BasicNFT"
                                            }
                                        },
                                        "src": "608:25:40",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BasicNFT_$46719",
                                            "typeString": "contract BasicNFT"
                                        }
                                    },
                                    "id": 46758,
                                    "nodeType": "ExpressionStatement",
                                    "src": "608:25:40"
                                }
                            ]
                        },
                        "functionSelector": "0a9254e4",
                        "id": 46760,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "setUp",
                        "nameLocation": "542:5:40",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 46744,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "547:2:40"
                        },
                        "returnParameters": {
                            "id": 46745,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "557:0:40"
                        },
                        "scope": 46835,
                        "src": "533:107:40",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 46789,
                            "nodeType": "Block",
                            "src": "687:260:40",
                            "statements": [
                                {
                                    "assignments": [
                                        46764
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 46764,
                                            "mutability": "mutable",
                                            "name": "name",
                                            "nameLocation": "711:4:40",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 46789,
                                            "src": "697:18:40",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 46763,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "697:6:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 46768,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "expression": {
                                                "id": 46765,
                                                "name": "basicNft",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46735,
                                                "src": "718:8:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_BasicNFT_$46719",
                                                    "typeString": "contract BasicNFT"
                                                }
                                            },
                                            "id": 46766,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "727:4:40",
                                            "memberName": "name",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 40745,
                                            "src": "718:13:40",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                                "typeString": "function () view external returns (string memory)"
                                            }
                                        },
                                        "id": 46767,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "718:15:40",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "697:36:40"
                                },
                                {
                                    "assignments": [
                                        46770
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 46770,
                                            "mutability": "mutable",
                                            "name": "expected",
                                            "nameLocation": "757:8:40",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 46789,
                                            "src": "743:22:40",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string"
                                            },
                                            "typeName": {
                                                "id": 46769,
                                                "name": "string",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "743:6:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_storage_ptr",
                                                    "typeString": "string"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 46772,
                                    "initialValue": {
                                        "hexValue": "446f676965",
                                        "id": 46771,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "768:7:40",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_e5d21699003d762b953d66adecbe4f97c4791cae2f281f96a4beb7efcb7bbcf6",
                                            "typeString": "literal_string \"Dogie\""
                                        },
                                        "value": "Dogie"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "743:32:40"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                "id": 46786,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "id": 46777,
                                                                    "name": "name",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 46764,
                                                                    "src": "856:4:40",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 46775,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967295,
                                                                    "src": "839:3:40",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 46776,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberLocation": "843:12:40",
                                                                "memberName": "encodePacked",
                                                                "nodeType": "MemberAccess",
                                                                "src": "839:16:40",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                    "typeString": "function () pure returns (bytes memory)"
                                                                }
                                                            },
                                                            "id": 46778,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "839:22:40",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        ],
                                                        "id": 46774,
                                                        "name": "keccak256",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967288,
                                                        "src": "829:9:40",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                                        }
                                                    },
                                                    "id": 46779,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "829:33:40",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "id": 46783,
                                                                    "name": "expected",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 46770,
                                                                    "src": "893:8:40",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 46781,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967295,
                                                                    "src": "876:3:40",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 46782,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberLocation": "880:12:40",
                                                                "memberName": "encodePacked",
                                                                "nodeType": "MemberAccess",
                                                                "src": "876:16:40",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                    "typeString": "function () pure returns (bytes memory)"
                                                                }
                                                            },
                                                            "id": 46784,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "876:26:40",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        ],
                                                        "id": 46780,
                                                        "name": "keccak256",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967288,
                                                        "src": "866:9:40",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                                        }
                                                    },
                                                    "id": 46785,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "866:37:40",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "src": "829:74:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 46773,
                                            "name": "assert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967293,
                                            "src": "822:6:40",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 46787,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "822:82:40",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 46788,
                                    "nodeType": "ExpressionStatement",
                                    "src": "822:82:40"
                                }
                            ]
                        },
                        "functionSelector": "0032f8d1",
                        "id": 46790,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "testNameIsCorrect",
                        "nameLocation": "655:17:40",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 46761,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "672:2:40"
                        },
                        "returnParameters": {
                            "id": 46762,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "687:0:40"
                        },
                        "scope": 46835,
                        "src": "646:301:40",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 46833,
                            "nodeType": "Block",
                            "src": "998:213:40",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 46796,
                                                "name": "USER",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46740,
                                                "src": "1017:4:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 46793,
                                                "name": "vm",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 58,
                                                "src": "1008:2:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_Vm_$17625",
                                                    "typeString": "contract Vm"
                                                }
                                            },
                                            "id": 46795,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1011:5:40",
                                            "memberName": "prank",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 16942,
                                            "src": "1008:8:40",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address) external"
                                            }
                                        },
                                        "id": 46797,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1008:14:40",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 46798,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1008:14:40"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 46802,
                                                "name": "uri",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46743,
                                                "src": "1049:3:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_string_memory_ptr",
                                                    "typeString": "string memory"
                                                }
                                            ],
                                            "expression": {
                                                "id": 46799,
                                                "name": "basicNft",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46735,
                                                "src": "1032:8:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_BasicNFT_$46719",
                                                    "typeString": "contract BasicNFT"
                                                }
                                            },
                                            "id": 46801,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1041:7:40",
                                            "memberName": "mintNft",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 46705,
                                            "src": "1032:16:40",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory) external"
                                            }
                                        },
                                        "id": 46803,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1032:21:40",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 46804,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1032:21:40"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 46811,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "id": 46808,
                                                            "name": "USER",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 46740,
                                                            "src": "1090:4:40",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 46806,
                                                            "name": "basicNft",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 46735,
                                                            "src": "1071:8:40",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_BasicNFT_$46719",
                                                                "typeString": "contract BasicNFT"
                                                            }
                                                        },
                                                        "id": 46807,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "1080:9:40",
                                                        "memberName": "balanceOf",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 40723,
                                                        "src": "1071:18:40",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                            "typeString": "function (address) view external returns (uint256)"
                                                        }
                                                    },
                                                    "id": 46809,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1071:24:40",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "31",
                                                    "id": 46810,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1099:1:40",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                    },
                                                    "value": "1"
                                                },
                                                "src": "1071:29:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 46805,
                                            "name": "assert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967293,
                                            "src": "1064:6:40",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 46812,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1064:37:40",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 46813,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1064:37:40"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                "id": 46830,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "arguments": [
                                                                        {
                                                                            "hexValue": "30",
                                                                            "id": 46820,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "1163:1:40",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                                "typeString": "int_const 0"
                                                                            },
                                                                            "value": "0"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "argumentTypes": [
                                                                            {
                                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                                "typeString": "int_const 0"
                                                                            }
                                                                        ],
                                                                        "expression": {
                                                                            "id": 46818,
                                                                            "name": "basicNft",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 46735,
                                                                            "src": "1145:8:40",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_contract$_BasicNFT_$46719",
                                                                                "typeString": "contract BasicNFT"
                                                                            }
                                                                        },
                                                                        "id": 46819,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberLocation": "1154:8:40",
                                                                        "memberName": "tokenURI",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 46718,
                                                                        "src": "1145:17:40",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                                                            "typeString": "function (uint256) view external returns (string memory)"
                                                                        }
                                                                    },
                                                                    "id": 46821,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "kind": "functionCall",
                                                                    "lValueRequested": false,
                                                                    "nameLocations": [],
                                                                    "names": [],
                                                                    "nodeType": "FunctionCall",
                                                                    "src": "1145:20:40",
                                                                    "tryCall": false,
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 46816,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967295,
                                                                    "src": "1128:3:40",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 46817,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberLocation": "1132:12:40",
                                                                "memberName": "encodePacked",
                                                                "nodeType": "MemberAccess",
                                                                "src": "1128:16:40",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                    "typeString": "function () pure returns (bytes memory)"
                                                                }
                                                            },
                                                            "id": 46822,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1128:38:40",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        ],
                                                        "id": 46815,
                                                        "name": "keccak256",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967288,
                                                        "src": "1118:9:40",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                                        }
                                                    },
                                                    "id": 46823,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1118:49:40",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "id": 46827,
                                                                    "name": "uri",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 46743,
                                                                    "src": "1198:3:40",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_string_memory_ptr",
                                                                        "typeString": "string memory"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "id": 46825,
                                                                    "name": "abi",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967295,
                                                                    "src": "1181:3:40",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_magic_abi",
                                                                        "typeString": "abi"
                                                                    }
                                                                },
                                                                "id": 46826,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "memberLocation": "1185:12:40",
                                                                "memberName": "encodePacked",
                                                                "nodeType": "MemberAccess",
                                                                "src": "1181:16:40",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                                    "typeString": "function () pure returns (bytes memory)"
                                                                }
                                                            },
                                                            "id": 46828,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "nameLocations": [],
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1181:21:40",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                                "typeString": "bytes memory"
                                                            }
                                                        ],
                                                        "id": 46824,
                                                        "name": "keccak256",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967288,
                                                        "src": "1171:9:40",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                                        }
                                                    },
                                                    "id": 46829,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1171:32:40",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "src": "1118:85:40",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 46814,
                                            "name": "assert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967293,
                                            "src": "1111:6:40",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 46831,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1111:93:40",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 46832,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1111:93:40"
                                }
                            ]
                        },
                        "functionSelector": "451f3246",
                        "id": 46834,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "testCanMintAndHaveABalance",
                        "nameLocation": "962:26:40",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 46791,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "988:2:40"
                        },
                        "returnParameters": {
                            "id": 46792,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "998:0:40"
                        },
                        "scope": 46835,
                        "src": "953:258:40",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 46836,
                "src": "254:959:40",
                "usedErrors": [],
                "usedEvents": [
                    139,
                    143,
                    147,
                    151,
                    155,
                    159,
                    163,
                    167,
                    173,
                    179,
                    187,
                    195,
                    201,
                    207,
                    213,
                    219,
                    224,
                    229,
                    234,
                    241,
                    248,
                    255
                ]
            }
        ],
        "src": "32:1182:40"
    },
    "functionHashes": {
        "IS_TEST()": "fa7626d4",
        "USER()": "81e167cf",
        "basicNft()": "c37aa674",
        "deployer()": "d5f39488",
        "excludeArtifacts()": "b5508aa9",
        "excludeContracts()": "e20c9f71",
        "excludeSelectors()": "b0464fdc",
        "excludeSenders()": "1ed7831c",
        "failed()": "ba414fa6",
        "setUp()": "0a9254e4",
        "targetArtifactSelectors()": "66d9a9a0",
        "targetArtifacts()": "85226c81",
        "targetContracts()": "3f7286f4",
        "targetInterfaces()": "2ade3880",
        "targetSelectors()": "916a17c6",
        "targetSenders()": "3e5e3c23",
        "testCanMintAndHaveABalance()": "451f3246",
        "testNameIsCorrect()": "0032f8d1",
        "uri()": "eac989f8"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "2049600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "IS_TEST()": "2667",
            "USER()": "2464",
            "basicNft()": "2593",
            "deployer()": "2627",
            "excludeArtifacts()": "infinite",
            "excludeContracts()": "infinite",
            "excludeSelectors()": "infinite",
            "excludeSenders()": "infinite",
            "failed()": "infinite",
            "setUp()": "infinite",
            "targetArtifactSelectors()": "infinite",
            "targetArtifacts()": "infinite",
            "targetContracts()": "infinite",
            "targetInterfaces()": "infinite",
            "targetSelectors()": "infinite",
            "targetSenders()": "infinite",
            "testCanMintAndHaveABalance()": "infinite",
            "testNameIsCorrect()": "infinite",
            "uri()": "895"
        }
    }
}